# Paste your interactive Python practice sesssion here
# See course site for details.
#
# Windows                 Mac
# CTRL A = select all = Command A
# CTRL C = copy =       Command C
# CTRL V = paste =      Command V

# It'll look something like this only longer:

Python 3.10.5 (main, Jul 22 2022, 17:09:35) [GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 2+2
4
>>> print("hello")
hello
>>> a = 5
>>> b = 3
>>> print( min (a, b))
3
>>> 
>>> 45 + 72
117
>>> x = 7
>>> y = 3
>>> x + y
10
>>> total = x + y
>>> total
10
>>> type (x)
<class 'int'>
>>> type(10.5)
<class 'float'>
>>> 7 * 4
28
>>> 2 ** 10
1024
>>> 9 ** (1 / 2)  
3.0
>>> 7/4
1.75
>>> 7 // 4
1
>>> 3 // 5
0
>>> 14 // 7
2
>>> -13 / 4
-3.25
>>> -13 // 4
-4
>>> 123 / 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ZeroDivisionError: division by zero
>>> z + 7
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'z' is not defined
>>> 17 % 5
2
>>> 7.5 % 3.5
0.5
>>> 10 * (5 + 3)
80
>>> 10 * 5 + 3
53
>>> print("Welcome to Python!")
Welcome to Python!
>>> print('welcome', 'to', 'Python!')
welcome to Python!
print('Welcome to Python!')
Welcome to Python!
>>> print('Welcome/nto/n/nPython!')
Welcome/nto/n/nPython!
>>> print('Welcome\nto
  File "<stdin>", line 1
    print('Welcome\nto
          ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print('Welcome\nto\n\nPython!')
Welcome
to

Python!
>>> print('\tWelcome to Python!')
        Welcome to Python!
>>> print('\twelcome to \\ python!')
        welcome to \ python!
>>> print('this is alonger string, so we \
... : split it over two lines')
this is alonger string, so we : split it over two lines
>>> print('this is a longer string, so we \
... split it over two lines')
this is a longer string, so we split it over two lines
>>> print('Sum is' , 7 + 3)
Sum is 10
>>> type('word')
<class 'str'>
>>> print('int(5.2)', 'truncates 5.2 to', int(5.2))
int(5.2) truncates 5.2 to 5
>>> print('Display "hi" in quotes')
Display "hi" in quotes
>>> print('Display 'hi' in quotes')
  File "<stdin>", line 1
    print('Display 'hi' in quotes')
          ^^^^^^^^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> print('Display \'hi\' in quotes')
Display 'hi' in quotes
>>> print("Display the name O'Brien") 
Display the name O'Brien
>>> print("Display \"hi\" in quotes")
Display "hi" in quotes
>>> print("""Display "hi" and 'bye' in quotes""")
Display "hi" and 'bye' in quotes
>>> triple_quoted_string = """This is a triple-quoted 
... string that spans two lines"""
>>> print(triple_quoted_string)
This is a triple-quoted 
string that spans two lines
>>> triple_quoted_string
'This is a triple-quoted \nstring that spans two lines'
>>> print("""This is a lengthy  
... multiline string containing
... a few lines 
... of text""")
This is a lengthy
multiline string containing
a few lines
of text
>>> name = input("What's your name?")
What's your name? Trevor
>>> name
' Trevor'
>>> print(name)
 Trevor
>>> name - input("What's your name?")
What's your name? Trevor
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for -: 'str' and 'str'
>>> name
' Trevor'
>>> What's your name?
  File "<stdin>", line 1
    What's your name?
        ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print(name)
 Trevor
>>> value1= input ('Enter first number: ')
Enter first number: 7
>>> value2 = input('Enter second number: ')
Enter second number: 3
>>> valu 1 + value2  
  File "<stdin>", line 1
    valu 1 + value2
         ^
SyntaxError: invalid syntax
>>> value1 + value2
'73'
>>> value = int(value)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'value' is not defined. Did you mean: 'value1'?
>>> value = input('Enter an integer: ')
Enter an integer: 7
>>> Value = int(value)
>>> value
'7'
>>> print(value)
7
>>> print('value')
value
>>> print("value")
value
>>> print(""" "value" """)
 "value" 
>>> another_value = int(input('Enter another integer: ')
... )
Enter another integer: 13
>>> another_value
13
>>> value + another_value
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can only concatenate str (not "int") to str
>>> value + another_value
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can only concatenate str (not "int") to str
>>> another_value = int(input('Enter another integer: '))
Enter another integer: 13
>>> another_value 
13
>>> value + another_value
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can only concatenate str (not "int") to str
>>> int(10.5)
10
>>> int(10.7)
10
>>> float(10)
10.0
>>> print float(10)
  File "<stdin>", line 1
    print float(10)
    ^^^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?
>>> print('float 10)
  File "<stdin>", line 1
    print('float 10)
          ^
SyntaxError: unterminated string literal (detected at line 1)
>>> print('float 10')
float 10
>>> float('6.2') * 3.3
20.46
